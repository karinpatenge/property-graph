[
  {
    "name" : "Use Cases/CORA Demo",
    "description" : "Graph Machine Learning capabilities of Oracle Graph Server (PGX) explained using the CORA dataset",
    "tags" : [
      "pgx",
      "java",
      "cora",
      "pgql",
      "graphml",
      "graphwise",
      "pypgx"
    ],
    "version" : "6",
    "layout" : "zeppelin",
    "type" : "Default",
    "readOnly" : false,
    "snapshot" : false,
    "template" : "dsq3AE3n",
    "templateConfig" : "{\"visualization\":{\"filters\":[{\"_id\":1697624663845,\"component\":\"edge\",\"type\":\"styling\",\"target\":\"edge\",\"enabled\":true,\"conditions\":{\"operator\":\"and\",\"conditions\":[{\"property\":\"label\",\"operator\":\"=\",\"value\":\"CITE\"}]},\"properties\":{\"colors\":[\"green\"],\"legendTitle\":[\"Citation\"],\"legendDescription\":[],\"style\":[\"dashed3\"]},\"aggregation\":[]},{\"_id\":1697624344621,\"component\":\"vertex\",\"type\":\"styling\",\"target\":\"vertex\",\"enabled\":true,\"conditions\":{\"operator\":\"and\",\"conditions\":[{\"property\":\"label\",\"operator\":\"=\",\"value\":\"PAPER\"}]},\"properties\":{\"colors\":[\"rgb(138, 135, 135)\"],\"icons\":[\"fa-newspaper-o\"],\"iconColors\":[\"rgb(255, 255, 255)\"],\"legendTitle\":[\"Paper\"],\"legendDescription\":[],\"label\":[\"LABEL\"]},\"aggregation\":[]}],\"version\":9}}",
    "paragraphs" : [
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "",
          "# Machine Learning for Graphs",
          "",
          "## Software assets relation to this demo",
          "",
          "Welcome to Property Graph feature of Oracle Database.  ",
          "",
          "The Property Graph feature of Oracle Database offers powerful graph support for Oracle database, to explore and discover complex relationships in data sets such as customer data, social networks, and financial transactions, for applications in product recommendation, fraud detection, risk analysis, targeted marketing, and more.  ",
          "",
          "This high performance Graph feature delivers advanced graph query language support, developer APIs, and analytics capabilities with nearly 60 pre-built algorithms.  ",
          "",
          "The Property Graph features including the PGQL (Property Graph Query Language) support is available from Oracle Database 12.2 onward. Starting from Oracle Database Release 23c Free - Developer Release, you can also create and query property graphs using SQL, as defined in the SQL:2023 standard.  ",
          "",
          "Oracle Graph Server and Client is a software package that works with the Property Graph feature in Oracle Database. It includes graph tools, client libraries, and Oracle Graph Server for running graph analytics algorithms. Oracle Graph Server and Client releases four times a year and its release version number is not related to the Oracle Database Release version number.   ",
          "",
          "Graph Studio is an integrated, self-service tool to work with graphs. It includes: ",
          "",
          "* Automated graph modeling",
          "* Extensive graph analytics and graph query support",
          "* Advanced notebooks and integrated visualization",
          "* Automated install, upgrade, and provisioning",
          "",
          "Graph Studio is included in Autonomous Database Free Tier, Autonomous Data Warehouse on Shared Infrastructure, and Autonomous Transaction Processing on Shared Infrastructure. It is not a part of APEX Service or Autonomous JSON.",
          "",
          "## The Dataset",
          "",
          "The [Cora dataset](https://linqs.org/datasets/#cora) consists of 2708 scientific publications classified into one of seven classes. The citation network consists of 5429 links. Each publication in the dataset is described by a 0/1-valued word vector indicating the absence/presence of the corresponding word from the dictionary. The dictionary consists of 1433 unique words."
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : "[{\"html\":{\"lastColumns\":[]}}]",
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "",
          "Check the [PyPGX documentation](https://docs.oracle.com/cd/F41824_01/latest/prog-guides/mllib/supervisedgraphwise.html) for details about PgxML."
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : "[{\"html\":{\"lastColumns\":[]}}]",
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "",
          "## The data source"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%sql",
          "",
          "select * ",
          "from cora_cites",
          "fetch first 20 rows only"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%sql",
          "",
          "select paper_id, label, feature2, feature998",
          "from cora_content",
          "fetch first 20 rows only"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 0,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "",
          "## Graph definition"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-rdbms",
          "",
          "/* Create the graph */",
          "CREATE PROPERTY GRAPH cora_graph",
          "    VERTEX TABLES (  ",
          "        CORA_CONTENT  ",
          "            KEY ( \"PAPER_ID\" )  ",
          "            LABEL \"PAPER\"   ",
          "            PROPERTIES ARE ALL COLUMNS  ",
          "    )  ",
          "    EDGE TABLES (  ",
          "        CORA_CITES  ",
          "            KEY ( \"ID\" )  ",
          "            SOURCE KEY ( \"CITING\" ) REFERENCES \"CORA_CONTENT\"( \"PAPER_ID\" )  ",
          "            DESTINATION KEY ( \"CITED\" ) REFERENCES \"CORA_CONTENT\"( \"PAPER_ID\" )  ",
          "            LABEL \"CITE\"  ",
          "            PROPERTIES ARE ALL COLUMNS  ",
          "    )  ",
          "OPTIONS (PG_VIEW)   "
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-rdbms",
          "",
          "/* Drop the graph */",
          "DROP PROPERTY GRAPH cora_graph"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "## Load/unload the graph"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : "[{\"html\":{\"lastColumns\":[]}}]",
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 7,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%java-pgx",
          "",
          "// Load the graph using the Java API",
          "var GRAPH_NAME=\"CORA_GRAPH\";",
          "// Try getting the graph from the in-memory graph server",
          "PgxGraph graph = session.getGraph(GRAPH_NAME);",
          "// If it does not exist read it into memory",
          "if (graph == null) {",
          "    session.readGraphByName(",
          "        GRAPH_NAME, ",
          "        GraphSource.PG_VIEW, ",
          "        ReadGraphOption.optimizeFor(GraphOptimizedFor.READ),",
          "        ReadGraphOption.onMissingVertex(OnMissingVertex.IGNORE_EDGE));",
          "    out.println (\"Graph \"+ GRAPH_NAME + \" successfully loaded\");",
          "    graph = session.getGraph(GRAPH_NAME);",
          "} else {",
          "   // out.println (\"Graph \"+ GRAPH_NAME + \" already loaded\");",
          "   out.println (\"Graph '\"+ graph.getName() + \"' already loaded\");",
          "}",
          "out.println (\"# of Vertices: \"+graph.getNumVertices());",
          "out.println (\"# of Edges: \"+graph.getNumEdges());"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 5,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Unload the graph if it is loaded into memory",
          "graph_name = \"CORA_GRAPH\"",
          "",
          "graph = session.get_graph(graph_name)",
          "if type(graph) == pypgx.api._pgx_graph.PgxGraph:",
          "    graph.destroy()",
          "    print('The graph ' + graph_name + ' has been destroyed.')",
          "else:",
          "    print('The graph ' + graph_name +' does not exist.')"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 7,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%java-pgx",
          "",
          "// Output some more metadata about the graphs currently loaded into memory",
          "out.println(\"%table\");",
          "out.println(\"Graph Name\\tMemory (MB)\\tIs Transient\\tCreated\\t# Vertices\\t# Edges\\t# Snapshots\");",
          "for (PgxGraph g : session.getGraphs().values()) {",
          "  out.printf(",
          "    \"%s\\t%s\\t%s\\t%s\\t%s\\t%s\\n\", ",
          "    g.getName(),",
          "    g.getMemoryMb(),",
          "    g.isTransient(),",
          "    g.getCreationTimestamp(),",
          "    g.getNumVertices(),",
          "    g.getNumEdges(),",
          "    session.getAvailableSnapshots(g).size()",
          "  );",
          "} "
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"table\":{\"lastColumns\":[\"Graph Name\",\"Internal ID\",\"Is Transient\",\"Created\",\"# Vertices\",\"# Edges\",\"# Snapshots\"],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 5,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Output some metadata about the graphs currently loaded into memory",
          "for graphs in session.get_graphs():",
          "    g = session.get_graph(graphs)",
          "    # print(g)",
          "    print (\"   Graph name: \", g.name)",
          "    print (\"           ID: \", g.get_id())",
          "    print (\"      created: \", g.creation_timestamp)",
          "    print (\"   # vertices: \", g.num_vertices)",
          "    print (\"      # edges: \", g.num_edges)",
          "    print (\" memory in MB: \", g.memory_mb)  ",
          "    print (\"   permission: \", g.get_permission())",
          "    print (\"    transient: \", g.is_transient)",
          "    print (\"    published: \", g.is_published)",
          "    if g.is_published == True:",
          "        print (\"       pinned: \", g.is_pinned())",
          "    print (\"  # snapshots:\", len(session.get_available_snapshots(g)))        ",
          "    print (\"\\nEdge properties:\")",
          "    for v in g.get_edge_properties():",
          "        print (\"    \", v.name, \"type:\", v.type)            ",
          "    print (\"\\nVertex properties:\")",
          "    for v in g.get_vertex_properties():",
          "        print (\"    \", v.name, \"type:\", v.type)",
          "    # g.close()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"table\":{\"lastColumns\":[\"Graph Name\",\"Internal ID\",\"Is Transient\",\"Created\",\"# Vertices\",\"# Edges\",\"# Snapshots\"],\"version\":1},\"raw\":{\"height\":150,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "",
          "## Verify the graph"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : null,
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-pgx",
          "",
          "SELECT label(a), count(a) as cnt ",
          "FROM MATCH (a) ON cora_graph",
          "GROUP BY label(a)",
          "ORDER BY label(a)"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : "[{\"table\":{\"lastColumns\":[\"label(a)\",\"CNT\"],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 6,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-pgx",
          "",
          "SELECT label(e), count(e) as cnt ",
          "FROM MATCH (a) -[e]- (b) ON cora_graph",
          "GROUP BY label(e)",
          "ORDER BY label(e)"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : "[{\"table\":{\"lastColumns\":[\"label(e)\",\"CNT\"],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-pgx",
          "",
          "SELECT a,e,b",
          "FROM MATCH (a) -[e IS CITE]-> (b IS PAPER) ON cora_graph",
          "WHERE a.paper_id = 31336"
        ],
        "selectedVisualization" : "visualization",
        "visualizationConfig" : "[{\"raw\":{}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-pgx",
          "",
          "SELECT v1,e,v2",
          "FROM MATCH ANY (a) -[IS CITE]->+ (b IS PAPER) ON cora_graph",
          "ONE ROW PER STEP ( v1, e, v2 )"
        ],
        "selectedVisualization" : "visualization",
        "visualizationConfig" : "[{\"raw\":{}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-pgx",
          "",
          "/* Check how to filter the graph to obtain a train and a test graph */",
          "SELECT v",
          "FROM MATCH (v) ON cora_graph",
          "WHERE v.paper_id % 4 > 0",
          "LIMIT 10"
        ],
        "selectedVisualization" : "table",
        "visualizationConfig" : "[{\"raw\":{},\"table\":{\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%md",
          "",
          "## Using GraphML to analyze the CORA graph"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : true,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Import  VertexFilter",
          "from pypgx.api.filters import VertexFilter"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "full_graph = session.read_graph_by_name(\"CORA_GRAPH\", \"pg_view\")"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Set a vertex filter to create the train graph",
          "vertex_filter = VertexFilter.from_pgql_result_set(",
          "    session.query_pgql(\"SELECT v FROM MATCH (v) ON cora_graph WHERE v.paper_id % 4 > 0\"), ",
          "    \"v\"",
          ")",
          "train_graph = full_graph.filter(vertex_filter, name=\"CORA_TRAIN_SUBSET_GRAPH\")",
          "train_graph"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%pgql-pgx",
          "",
          "/* Show the train graph containing a subset of the full graph */",
          "SELECT n, e, m FROM MATCH (n) -[e]-> (m) ON cora_train_subset_graph"
        ],
        "selectedVisualization" : "visualization",
        "visualizationConfig" : "[{\"raw\":{},\"table\":{\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Create the test graph containing all vertices that are not in the train graph",
          "test_vertices = []",
          "for v in full_graph.get_vertices():",
          "    if not train_graph.has_vertex(v.id):",
          "        test_vertices.append(v)"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "test_vertices"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":100,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Append features to vertices",
          "vertex_input_property_names = []",
          "",
          "for i in range(2,998):",
          "    vertex_input_property_names.append(\"FEATURE\" + str(i))",
          "",
          "vertex_input_property_names"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":100,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "params = dict(",
          "    vertex_target_property_name=\"LABEL\",",
          "    vertex_input_property_names=vertex_input_property_names",
          ")",
          "",
          "model = analyst.supervised_graphwise_builder(**params)"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Train the SupervisedGraphWiseModel",
          "model.fit(train_graph)"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Fetch the training loss value",
          "loss = model.get_training_loss()",
          "loss"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Infer the labels for vertices in the test graph (including vertices that were not seen during training)",
          "labels = model.infer(full_graph, test_vertices)",
          "",
          "labels.print()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Set the decision threshold applied to the logits by adding it as an extra parameter, which is by default 0.",
          "labels = model.infer(",
          "    full_graph,",
          "    full_graph.get_vertices(),",
          "    6",
          ")",
          "",
          "labels.print()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Write labels in a database table",
          "labels.write().db().table_name(\"CORA_LABELS\").name(\"labels\").overwrite(True).store()"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Get the model confidence for each class by inferring the prediction logits",
          "logits = model.infer_logits(full_graph, test_vertices)",
          "",
          "logits.head(5).print()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Convert to Pandas dataframe",
          "rs = logits",
          "df = rs.to_pandas()",
          "df"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Evaluate model performance",
          "model.evaluate(full_graph, test_vertices).print()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Evaluate model performance using a decision threshold",
          "model.evaluate(full_graph, test_vertices, 6).print()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Use the trained model to infer embeddings for unseen nodes",
          "vertex_vectors = model.infer_embeddings(full_graph, test_vertices).flatten_all()",
          "",
          "rs = vertex_vectors",
          "df = rs.to_pandas()",
          "df"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Write embeddings into a database table",
          "vertex_vectors.write().db().table_name(\"CORA_EMBEDDINGS\").name(\"vertex_vectors\").overwrite(True).store()"
        ],
        "selectedVisualization" : "raw",
        "visualizationConfig" : "[{\"raw\":{\"height\":200,\"lastColumns\":[],\"version\":1}}]",
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      },
      {
        "row" : 0,
        "col" : 0,
        "sizeX" : 0,
        "width" : 12,
        "title" : null,
        "hasTitle" : false,
        "message" : [
          "%python-pgx",
          "",
          "# Store the model in the database",
          "model.export().db(model_store=\"CORA_MODEL\", model_name=\"cora_model\", model_description=\"CORA Supervised GraphWise Model\", overwrite=True)"
        ],
        "selectedVisualization" : "html",
        "visualizationConfig" : null,
        "hideCode" : false,
        "hideResult" : false,
        "hideGutter" : true,
        "hideVizConfig" : false,
        "hideInIFrame" : false,
        "enabled" : true,
        "forms" : "[]",
        "result" : null,
        "relations" : [ ],
        "dynamicFormParams" : null
      }
    ]
  }
]