--------------------------------------------------------
-- Query the graph using PGQL
--------------------------------------------------------

----------------------------------------------------------
-- Query the Property Graph metadata
----------------------------------------------------------
SELECT g.*
FROM MATCH (g IS property_graph) ON property_graph_metadata
ORDER BY g.graph_name;

----------------------------------------------------------
-- Query 1: List 10 transactions between two accounts
--          that are directly connected via a transaction.
--          Example of fixed-length path query
-----------------------------------------------------------
SELECT
  a.acct_id as src_account,
  b.acct_id as dst_account,
  t.amount as txn_amount,
  t.txn_date as txn_date
FROM MATCH (a IS account)-[t IS transfers]->(b IS account) ON bank_graph
ORDER BY src_account, dst_account, txn_date
LIMIT 10;

----------------------------------------------------------
-- Query 2: List all direct and indirect transactions
--          between account a and b
--          with a maxiumum hop distance of 6.
--          Example of variable-length path query
-----------------------------------------------------------
SELECT
  a.acct_id AS src_account,
  b.acct_id AS dst_account,
  LISTAGG(t.amount, ' + ') || ' = ',
  SUM(t.amount) AS total_amount
FROM MATCH ALL (a IS account) -[t IS transfers]->{,6} (b IS account) ONE ROW PER MATCH ON bank_graph
WHERE
  src_account = 831045 AND
  src_account <> dst_account
ORDER BY total_amount DESC, dst_account
LIMIT 10;

-----------------------------------------------------------------
-- Query 3a: Find any shortest path from account a1 to account a2
-----------------------------------------------------------------
SELECT
  COUNT(t) AS num_hops,
  a1.acct_id AS src_account,
  LISTAGG(b.acct_id, ' -> ' ) AS path_to_dst_account
FROM MATCH ANY SHORTEST (a1 IS account) (-[t IS transfers]- (b IS account))* (a2 IS account) ON bank_graph
WHERE a1.acct_id = 831045 AND a2.acct_id = 4309466287
ORDER BY num_hops;

--------------------------------------------------------------------
-- Query 3b: Find the shortest 3 paths from account a1 to account a2
--------------------------------------------------------------------
SELECT
  COUNT(t) AS num_hops,
  a1.acct_id AS src_account,
  LISTAGG(b.acct_id, ' -> ' ) AS path_to_dst_account
FROM MATCH SHORTEST 3 (a1 IS account) (-[t IS transfers]- (b IS account))* (a2 IS account) ON bank_graph
WHERE a1.acct_id = 831045 AND a2.acct_id = 4309466287
ORDER BY num_hops;

----------------------------------------------------------------------
-- Query 4: Find the shortest 10 circular payment chains for account a
----------------------------------------------------------------------
SELECT
  COUNT(t) AS num_hops,
  a.acct_id AS account,
  LISTAGG(b.acct_id, ' -> ' ) AS circular_payment_chain
FROM MATCH SHORTEST 10 (a IS account) (-[t IS transfers]- (b IS account))* (a) ON bank_graph
WHERE a.acct_id = 4877749745 and num_hops > 0
ORDER BY num_hops;


-- Check Supported PGQL Features and Limitations for PGQL Property Graphs
-- https://docs.oracle.com/en/database/oracle/property-graph/23.4/spgdg/executing-pgql-queries-pgql-property-graphs.html#GUID-3C6D938A-D165-443E-8433-143D901E235C